[library]
# branchNameStrategy option determines how to approach a situation when the
# desired branch of the testplans library repository is not available.
# There are currently following strategies available:
#  * exact-match
#  * drop-least-significant
#
# exact-match
#  This strategy uses the branchNameFormat and doesn't allow fallback to any
#  other branch if the desired one is not available and fails.
#
# drop-least-significant
#  This strategy uses the branchNameFormat and if the desired branch is not
#  available tries another branch names continuously dropping the least
#  significat part of the version specification until branch of such name is
#  found (success) or until there's nothing more to drop (failure).
#  Example of branch names attempts is:
#   Foo-1.2-3 -> Foo-1.2 -> Foo-1 -> Foo -> (failure)
branchNameStrategy=drop-least-significant
# branchNameFormat option defines desired format of the branch that should be
# used when cloning the testplans library repository. Depending on the
# branchNameStrategy either branch of this format (or modified) will be used.
# Jinja2 template is used for branch name formatting where the event as well as
# all event structures are provided as separate variables.
branchNameFormat={{event.product.name.lower()}}-{{event.product.major}}.{{event.product.minor}}.{{event.product.other}}.{{event.product.flag}}
# Determines how test configurations of testplan and testcase are merged
# Possible methods are:
#   intersection - include the CaseRunConfiguration in TestRun only if the configurations in testplan and testcase are identical
#   extension - include the CaseRunConfiguration in TestRun if the testcase configuration doesn't conflict with the one in the testplan and add values from testplan configuration to compatible testcase configurations. If there are multiple compatible testplan configurations, new testcase configurations are created.
defaultCaseConfigMergeMethod=extension

[workflows]
# Perform dry-run only workflow execution. Set this to True when the actual
# execution should not be done and only preparation and teardown should be
# performed.
# This option should be changed for validation and testing purposes.
dry_run=False
# Directory where local execution logs will be stored
local_logs_dir=logs
# Default format for workflow logs. Most of the workflows will use this
# formatting but some workflows may need to define their special kind of
# formatting. In such case, consult with the settings of the plugin providing
# such workflow. Use str.format syntax.
log_format={asctime} - {message}
# Format of timestamp used in logs. The format and possible values are defined
# here: https://docs.python.org/3/library/time.html#time.strftime
log_timestamp_format=%Y-%m-%d %H:%M:%S

[reportSenders]
# Perform dry-run only reporting. Set this to True when the actual reporting
# should not be done and only preparation and teardown should be performed
# (with possible simulated reporting.
# This option should be changed for validation and testing purposes.
dry_run=False
# Directory where reporting related files will be saved
reporting_dir=.
# Path to yaml file with reportings that will be added to all testplans
# Adding library:// to the start of the path will make it relative to the library directory
additional_reporting=
# Limits how often can reportSender send reporting, 0 = no limit, processTestRunStarted and processTestRunFinished ignores this option.
# This setting is overriden by throttleInterval in reportSender-{type} section or throttleInterval from reporting data.
throttleInterval=0

[WebUI]
listen_ip=0.0.0.0
listen_port=random
# Create static version of WebUI before pipeline ends
create_static_webui=True
# Directory where the static WebUI will be created - logs dir should be in the same directory in order to be accessible
static_webui_dir=.

[issueAnalyzer]
# Instruct issues to be created in remote tracking databases when new is found
create_issues=False
# Instruct issues to be updated in remote tracking databases when new is found
update_issues=False
# Instead of updating already existing issues, create new ones. The URI of
# newly submitted issue will be used instead of the old one.
# When this is set to True, the update_issues option has no effect.
create_issues_instead_of_update=False
